#!/usr/bin/env bash
set -euo pipefail

_repo=""
_home=".dotfiles"
_home_dir="$HOME/$_home"
_bin_dir="$_home_dir/bin"
_setup="$_bin_dir/setup"
_install="$_bin_dir/install"

function is_installed {
  # Check if a value is provided.
  if [ -z "$1" ]; then
    return 1
  fi

  # Try checking the 'type'. This
  # is builtin and reliable, generally.
  if type "$1" >/dev/null 2>&1; then
    return 0
  fi

  # Fallback to 'which'.
  if which "$1" >/dev/null 2>&1; then
    return 0
  fi

  # Last resort: try to execute with --version or --help
  # (some programs exist but aren't in PATH detection).
  if "$1" --version >/dev/null 2>&1 || "$1" --help >/dev/null 2>&1; then
    return 0
  fi

  return 1
}

if [[ ! -d "$_home_dir" ]]; then
  git clone "$_repo" "$_home_dir"
fi

# Install "uv".
if ! is_installed uv; then
  if is_installed curl; then
    curl -LsSf https://astral.sh/uv/install.sh | sh >/dev/null 2>&1
  elif is_installed wget; then
    wget -qO- https://astral.sh/uv/install.sh | sh >/dev/null 2>&1
  fi
fi

# Make "uv" available on the PATH.
export PATH="$HOME/.local/bin:$PATH"

# Set the context to the install directory.
cd "$_install"

# Run the install via "uv".
uv python install
uv run main.py install --root=${_home_dir}
